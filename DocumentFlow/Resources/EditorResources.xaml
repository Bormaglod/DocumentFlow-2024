<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
                    xmlns:c="clr-namespace:DocumentFlow.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/DocumentFlow;component/Resources/SharedResources.xaml"/>
        <ResourceDictionary Source="/Syncfusion.Themes.Windows11Light.WPF;component/MSControl/TextBlock.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.Windows11Light.WPF;component/MSControl/TextBox.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.Windows11Light.WPF;component/MSControl/ComboBox.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.Windows11Light.WPF;component/MSControl/CheckBox.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.Windows11Light.WPF;component/TabControlExt/TabControlExt.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.Windows11Light.WPF;component/DateTimeEdit/DateTimeEdit.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.Windows11Light.WPF;component/IntegerTextBox/IntegerTextBox.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.Windows11Light.WPF;component/DoubleTextBox/DoubleTextBox.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.Windows11Light.WPF;component/CurrencyTextBox/CurrencyTextBox.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.Windows11Light.WPF;component/PercentTextBox/PercentTextBox.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.Windows11Light.WPF;component/SfMaskedEdit/SfMaskedEdit.xaml" />
        <ResourceDictionary Source="/Syncfusion.Themes.Windows11Light.WPF;component/ComboBoxAdv/ComboBoxAdv.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="TextBlockStyle" 
           TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource WPFTextBlockStyle}">
        <Setter Property="Margin" Value="0,0,10,14"/>
    </Style>

    <Style x:Key="TextBlockHeaderStyle" 
           TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource WPFTextBlockStyle}">
        <Setter Property="Margin" Value="0,0,10,14"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="TextBlockOwnerStyle" 
       TargetType="{x:Type TextBlock}"
       BasedOn="{StaticResource WPFTextBlockStyle}">
        <Setter Property="Margin" Value="0,0,0,14"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="TextBoxBaseStyle" 
       TargetType="{x:Type TextBox}"
       BasedOn="{StaticResource WPFTextBoxStyle}">
        <Setter Property="Margin" Value="0,0,0,5"/>
    </Style>

    <Style x:Key="TextBoxStyle" 
           TargetType="{x:Type TextBox}"
           BasedOn="{StaticResource TextBoxBaseStyle}">
        <Setter Property="IsEnabled" Value="{Binding Path=DataContext.Enabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"/>
    </Style>

    <Style x:Key="TextBoxDisabledStyle" 
       TargetType="{x:Type TextBox}"
       BasedOn="{StaticResource TextBoxBaseStyle}">
        <Setter Property="IsEnabled" Value="False"/>
    </Style>

    <Style x:Key="MultilineTextBoxStyle"
           TargetType="{x:Type TextBox}"
           BasedOn="{StaticResource TextBoxStyle}">
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
    </Style>

    <Style x:Key="ComboBoxStyle"
           TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource WPFComboBoxStyle}">
        <Setter Property="Margin" Value="0,0,0,5"/>
        <Setter Property="IsEnabled" Value="{Binding Path=DataContext.Enabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="ExtComboBoxStyle"
           TargetType="{x:Type c:ComboBox}">
        <Setter Property="Margin" Value="0,0,0,5"/>
        <Setter Property="IsEnabled" Value="{Binding Path=DataContext.Enabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="ComboBoxAdvStyle"
       TargetType="{x:Type syncfusion:ComboBoxAdv}"
       BasedOn="{StaticResource SyncfusionComboBoxAdvStyle}">
        <Setter Property="Margin" Value="0,0,0,5"/>
        <Setter Property="IsEnabled" Value="{Binding Path=DataContext.Enabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="CheckBoxStyle" 
           TargetType="{x:Type CheckBox}"
           BasedOn="{StaticResource WPFCheckBoxStyle}">
        <Setter Property="Margin" Value="0,0,0,5"/>
        <Setter Property="IsEnabled" Value="{Binding Path=DataContext.Enabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="DateTimeEditStyle" 
           TargetType="{x:Type syncfusion:DateTimeEdit}"
           BasedOn="{StaticResource SyncfusionDateTimeEditStyle}">
        <Setter Property="Margin" Value="0,0,0,5"/>
        <Setter Property="IsEnabled" Value="{Binding Path=DataContext.Enabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="IntegerTextBoxBaseStyle" 
       TargetType="{x:Type syncfusion:IntegerTextBox}"
       BasedOn="{StaticResource SyncfusionIntegerTextBoxStyle}">
        <Setter Property="Margin" Value="0,0,0,5"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="IntegerTextBoxDisabledStyle" 
           TargetType="{x:Type syncfusion:IntegerTextBox}"
           BasedOn="{StaticResource IntegerTextBoxBaseStyle}">
        <Setter Property="IsEnabled" Value="False"/>
    </Style>

    <Style x:Key="IntegerTextBoxStyle" 
           TargetType="{x:Type syncfusion:IntegerTextBox}"
           BasedOn="{StaticResource IntegerTextBoxBaseStyle}">
        <Setter Property="IsEnabled" Value="{Binding Path=DataContext.Enabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"/>
    </Style>

    <Style x:Key="IntegerTextBoxErrorStyle"
           TargetType="{x:Type syncfusion:IntegerTextBox}"
           BasedOn="{StaticResource IntegerTextBoxStyle}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" 
                     Value="true">
                <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DoubleTextBoxStyle" 
           TargetType="{x:Type syncfusion:DoubleTextBox}"
           BasedOn="{StaticResource SyncfusionDoubleTextBoxStyle}">
        <Setter Property="Margin" Value="0,0,0,5"/>
        <Setter Property="IsEnabled" Value="{Binding Path=DataContext.Enabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="DoubleTextBoxErrorStyle"
           TargetType="{x:Type syncfusion:DoubleTextBox}"
           BasedOn="{StaticResource DoubleTextBoxStyle}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" 
                     Value="true">
                <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PercentTextBoxStyle" 
       TargetType="{x:Type syncfusion:PercentTextBox}"
       BasedOn="{StaticResource SyncfusionPercentTextBoxStyle}">
        <Setter Property="Margin" Value="0,0,0,5"/>
        <Setter Property="IsEnabled" Value="{Binding Path=DataContext.Enabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="CurrencyTextBoxBaseStyle" 
           TargetType="{x:Type syncfusion:CurrencyTextBox}"
           BasedOn="{StaticResource SyncfusionCurrencyTextBoxStyle}">
        <Setter Property="Margin" Value="0,0,0,5"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="CurrencyDecimalDigits" Value="2"/>
    </Style>

    <Style x:Key="CurrencyTextBoxDisabledStyle" 
           TargetType="{x:Type syncfusion:CurrencyTextBox}"
           BasedOn="{StaticResource CurrencyTextBoxBaseStyle}">
        <Setter Property="IsEnabled" Value="False"/>
    </Style>
    
    <Style x:Key="CurrencyTextBoxStyle" 
           TargetType="{x:Type syncfusion:CurrencyTextBox}"
           BasedOn="{StaticResource CurrencyTextBoxBaseStyle}">
        <Setter Property="IsEnabled" Value="{Binding Path=DataContext.Enabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"/>
    </Style>

    <Style x:Key="CurrencyTextBoxErrorStyle"
           TargetType="{x:Type syncfusion:CurrencyTextBox}"
           BasedOn="{StaticResource CurrencyTextBoxStyle}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" 
                     Value="true">
                <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="NullableIntegerTextBoxStyle" 
           TargetType="{x:Type syncfusion:IntegerTextBox}"
           BasedOn="{StaticResource SyncfusionIntegerTextBoxStyle}">
        <Setter Property="Margin" Value="0,0,0,5"/>
        <Setter Property="IsEnabled" Value="{Binding Path=DataContext.Enabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="NullValue" Value="{x:Null}"/>
        <Setter Property="UseNullOption" Value="True"/>
        <Setter Property="WatermarkText" Value="Значение не установлено"/>
        <Setter Property="WatermarkTextIsVisible" Value="True"/>
    </Style>

    <Style x:Key="SelectParentStyle" 
           TargetType="{x:Type c:SelectBox}">
        <Setter Property="Margin" Value="0,0,0,5"/>
        <Setter Property="IsEnabled" Value="{Binding Path=DataContext.Enabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"/>
        <Setter Property="CanSelectFolder" Value="True"/>
        <Setter Property="TypeContent" Value="Directory"/>
    </Style>

    <Style x:Key="SelectBoxStyle" 
           TargetType="{x:Type c:SelectBox}">
        <Setter Property="Margin" Value="0,0,0,5"/>
        <Setter Property="IsEnabledEditor" Value="{Binding Path=DataContext.Enabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="MaskedEditStyle" 
           TargetType="{x:Type syncfusion:SfMaskedEdit}"
           BasedOn="{StaticResource SyncfusionSfMaskedEditStyle}">
        <Setter Property="Margin" Value="0,0,0,5"/>
        <Setter Property="IsEnabled" Value="{Binding Path=DataContext.Enabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="MaskType" Value="RegEx"/>
        <Setter Property="ValueMaskFormat" Value="ExcludePromptAndLiterals"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="TabControlStyle" 
           TargetType="{x:Type syncfusion:TabControlExt}"
           BasedOn="{StaticResource SyncfusionTabControlExtStyle}">
        <Setter Property="CloseButtonType" Value="Hide"/>
    </Style>
</ResourceDictionary>